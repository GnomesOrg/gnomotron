name: Deploy
on: 
  push:
    branches:
      - master

jobs:
  build-push:
    name: build docker image
    runs-on: ubuntu-20.04
    permissions: 
      packages: write

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true
      
      - name: set lower case owner name
        env:
          OWNER: '${{ github.repository_owner }}'
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}

      - uses: docker/login-action@v1
        name: login to ghcr
        with:
          registry: ghcr.io
          username: ${{ env.OWNER_LC }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push the image
        run: |
          docker image build -t 'ghcr.io/${{ env.OWNER_LC }}/gnomotron:${{ github.sha }}' -t 'ghcr.io/${{ env.OWNER_LC }}/gnomotron:latest' .
          docker image push 'ghcr.io/${{ env.OWNER_LC }}/gnomotron:${{ github.sha }}'
          docker image push 'ghcr.io/${{ env.OWNER_LC }}/gnomotron:latest'

  deploy:
    name: pull and run the app
    runs-on: self-hosted
    needs: 
      - build-push
    
    steps:
      - name: set lower case owner name
        env:
          OWNER: '${{ github.repository_owner }}'
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
          echo "IMAGE_NAME=ghcr.io/${{ env.OWNER_LC }}/gnomotron:${{ github.sha }}" >>${GITHUB_ENV}

      - uses: docker/login-action@v1
        name: login to ghcr
        with:
          registry: ghcr.io
          username: ${{ env.OWNER_LC }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: pull the image
        run: |
          docker image pull '${{ env.IMAGE_NAME }}'

      - name: remove the old container, if exists
        run: |
          docker container rm --force gnomotron

      - name: start the container with the new version
        run: |
          docker container run \ 
            -d \
            --name gnomotron \
            -e GNOMOTRON_TELEGRAM_API_KEY=${{ secrets.GNOMOTRON_TELEGRAM_API_KEY }} \
            -e GNOMOTRON_TELEGRAM_TOKEN=${{ secrets.GNOMOTRON_TELEGRAM_TOKEN }} \
            -e GNOMOTRON_TELEGRAM_CHAT_ID=${{ secrets.GNOMOTRON_TELEGRAM_CHAT_ID }} \
            '${{ env.IMAGE_NAME }}'
