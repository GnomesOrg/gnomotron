name: Deploy
on:
  push:
    branches:
      - master

jobs:
  build-push:
    name: build docker compose
    runs-on: ubuntu-20.04
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: set lower case owner name
        env:
          OWNER: '${{ github.repository_owner }}'
        run: |
          export "OWNER_LC=${OWNER,,}"
          export "IMAGE_NAME=ghcr.io/${OWNER_LC}/gnomotron"
          export "IMAGE_TAG=${{ github.sha }}"
          echo "OWNER_LC=${OWNER_LC}" >>${GITHUB_ENV}
          echo "IMAGE_NAME=${IMAGE_NAME}" >>${GITHUB_ENV}
          echo "IMAGE_TAG=${IMAGE_TAG}" >>${GITHUB_ENV}

      - uses: docker/login-action@v1
        name: login to ghcr
        with:
          registry: ghcr.io
          username: ${{ env.OWNER_LC }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push the image
        run: |
          docker compose build
          docker compose push

  deploy:
    name: pull and run the app
    runs-on: self-hosted
    needs:
      - build-push

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: set lower case owner name
        env:
          OWNER: '${{ github.repository_owner }}'
        run: |
          export "OWNER_LC=${OWNER,,}"
          export "IMAGE_NAME=ghcr.io/${OWNER_LC}/gnomotron"
          export "IMAGE_TAG=${{ github.sha }}"
          echo "OWNER_LC=${OWNER_LC}" >>${GITHUB_ENV}
          echo "IMAGE_NAME=${IMAGE_NAME}" >>${GITHUB_ENV}
          echo "IMAGE_TAG=${IMAGE_TAG}" >>${GITHUB_ENV}

      - uses: docker/login-action@v1
        name: login to ghcr
        with:
          registry: ghcr.io
          username: ${{ env.OWNER_LC }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: pull the image
        run: |
          docker compose pull

      - name: remove the old container, if exists
        run: |
          docker compose down --remove-orphans

      - name: start the container with the new version
        run: |
          docker compose up \
            -d \
            -e GNOMOTRON_TELEGRAM_API_KEY=${{ vars.GNOMOTRON_TELEGRAM_API_KEY }} \
            -e GNOMOTRON_TELEGRAM_TOKEN=${{ vars.GNOMOTRON_TELEGRAM_TOKEN }} \
            -e GNOMOTRON_MONGO_DB=${{ vars.GNOMOTRON_MONGO_DB }} \
            -e MONGO_INITDB_ROOT_USERNAME="${{ vars.MONGO_INITDB_ROOT_USERNAME }}" \
            -e MONGO_INITDB_ROOT_PASSWORD="${{ vars.MONGO_INITDB_ROOT_PASSWORD }}" \
            -e MONGO_INITDB_DATABASE="${{ vars.MONGO_INITDB_DATABASE }}" \
            -e BOT_NAME="${{ vars.BOT_NAME }}" \
            -e GNOMOTRON_MONGO_URI="${{ vars.GNOMOTRON_MONGO_URI }}"
